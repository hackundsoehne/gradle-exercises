/*

The most basic sort of repository is just a folder full of JARs, which Gradle
calls a flat directory repository.

*/

repositories {
    flatDir {
        dirs 'libs'
    }
}

/*

The `repositories` script block also allows you to use shortcut methods for
commonly used repositories such as Maven Central, Maven Local, or jCenter.
Simply call the appropriate method and the repository will by automatically
added. This is by far the most common way to declare a repository.

*/

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

/*

Gradle also supports resolving managed dependencies from Maven and Ivy
repositories. The syntax for both is the same.

*/

repositories {
    maven {
        url 'https://repo.foo.org/m2'
    }
}

/*

In some cases, credentials may be required to access a repository. You can
easily provide a username and password by placing them inside a `credentials`
block.

*/

repositories {
    ivy {
        url 'https://repo.foo.org/ivy'
        credentials {
            username 'user'
            password 'secret'
        }
    }
}

/*

Gradle supports a number of protocols for accessing repositories. In addition
to the standard HTTP and HTTPS, Gradle also supports SFTP and file based
repositories.

*/

repositories {
    ivy {
        url 'file:///home/user/repo'
    }
}
